<?xml version="1.0" encoding="utf-8" ?>
<Language Name="SAP ABAP" Startblock="ABAP Code">
<FileTypes>
	<FileType Extension=".abap" Name="C# code file"/>
</FileTypes>




	<Block Name="ABAP Code" Style="ABAP Code" EscapeChar="" IsMultiline="true">
		<!--<Scope Start="{" End="}" Style="ABAP Scope" Text="{...}" CauseIndent="true" />
		<Scope Start="#if" End="#endif" Style="ABAP Region" Text="#if...endif"  />
		<Scope Start="#region" End="#endregion" Style="ABAP Region" Text="" DefaultExpanded="false" />
		<Bracket Start="(" End=")" Style="ABAP Operator" />
		<Bracket Start="[" End="]" Style="ABAP Operator" />-->
		<!-- Keywords that can exist inside this block -->
		<Keywords>
      
			<PatternGroup Name="Keywords" Style="ABAP Keyword" CaseSensitive="false">
				<Patterns>
          ABS ACOS ADD
          ADD-CORRESPONDING
          ALL AND ANY
          APPEND
          ASC
          ASIN
          ASSIGN
          AT
          AT END OF
          AT FG
          AT FIRST
          AT LAST
          AT LINE-SELECTION
          AT NEW
          AT PFN
          AT SELECTION-SCREEN
          AT USER-COMMAND
          ATAN
          AUTHORITY-CHCK
          AUTHORITY-CHECK
          BACK
          BEGIN
          BETWEEN
          BINARY
          BLANK
          BREAK
          BREAK-POINT
          BY
          CA
          CALL
          CALL FUNCTION
          CASCADE
          CASE
          CEIL
          CENTERED
          CHECK
          CHECKBOX
          CHECKPOINT
          CLEAR
          CLIENT SPECIFIED
          CLOSE
          CLOSE CURSOR
          CN
          CNT
          CO
          COALESCE
          COLLATE
          COLLECT
          COLUMN
          COMMIT
          COMMIT WORK
          COMMUNICATION
          COMPUTE
          CONCATENATE
          CONDENSE
          CONSTANTS
          CONSTRAINT
          CONTAINS
          CONTINUE
          CONVERT
          COS
          COSH
          COUNTRY
          CP
          CREATE
          CREATE OBJECT
          CROSS
          CS
          CURSOR
          CUSTOMER-FUNCTION
          DATA
          DATABASE
          DATASET
          DECLARE
          DEFAULT
          DEFINE
          DELETE
          DELETE DYNPRO
          DELETE FROM 
          DESC
          DESCRIBE
          DIALOG
          DISTINCT
          DIV
          DIVIDE
          DIVIDE-CORRESPONDING
          DO
          DOUBLE
          DROP
          DYNPRO
          EDITOR-CALL
          EDITOR-CALL FOR
          ELSE
          ELSEIF
          END
          ENDAT
          ENDCASE
          ENDDO
          ENDEXEC
          ENDFORM
          ENDFUNCTION
          ENDIF
          ENDLOOP
          ENDMODULE
          ENDMOULE
          END-OF-DEFINITION
          END-OF-PAGE
          END-OF-SELECTION
          ENDON
          ENDPROVIDE
          ENDSELECT
          ENDWHILE
          EQ
          ESCAPE
          EXCEPT
          EXEC
          EXEC SQL
          EXECUTE
          EXISTS
          EXIT
          EXLORT
          EXP
          EXPORT
          EXPORT DYNPRO
          EXTEND CHECK
          EXTRACT
          FETCH
          FETCH NEXT CURSOR
          FETCH  
          FIELD-GROUPS
          FIELD-SYMBOLS
          FILED-GROUPS
          FILL
          FLOOR
          FOR
          FORM
          FORMAT
          FRAC
          FREE
          FREE OBJECT
          FROM
          FULL
          FUNCTION
          FUNCTION-POOL
          GE
          GENERATE
          GET
          GET CURSOR FIELD
          GET PARAMETER
          GET RUN TIME
          GET TIME
          GO
          GOTO
          GROUP
          GT
          HAVING
          HIDE
          IDENTITY
          IDENTITY_INSERT
          IDENTITYCOL
          IF
          IMPORT
          IMPORT DYNPRO
          IN
          INCLUDE
          INCLUDE STRUCTURE
          INDEX STRUCTURE
          INFOTYPES
          INITIAL
          INITIALIZATION
          INITILIZATION
          INNER
          INSERT
          INTO
          INTO TABLE
          INVERSE
          IS
          JOIN
          KEY
          LANGUAGE
          LE
          LEAVE
          LEAVE PROGRAM
          LEAVE TO
          LEFT
          LIKE
          LIMIT
          LINE
          LIST-PROCESSING
          LOAD
          LOCAL
          LOG
          LOG10
          LOOP
          LOOP AT
          LOOP ATWHERE
          LT
          MARGIN
          MARK
          MATCHCODE
          MEMORY
          MESSAGE
          MESSGAE
          MOD
          MODIFY
          MODIFY …
          MODULE
          MOVE
          MOVE-CORRESPONDING
          MULTIPLY
          MULTIPLY-CORRESPONGING
          NA
          NE
          NEW-LINE
          NEW-PAGE
          NOCHECK
          NOT
          NP
          NS
          NULL
          NULLIF
          OBJECT
          OCCURS
          OF
          OFF
          OFFSETS
          ON
          ON CHANGE OF
          OPEN
          OPEN CURSOR
          OPENDATASOURCE
          OR
          ORDER
          OUTER
          OVER
          OVERLAY
          PACK
          PARAMETER
          PARAMETERS
          PERFORM
          PF-STATUS
          POSITION
          PRECISION
          PRINT
          PRINT-CONTROL
          PROC
          PROCEDURE
          PROGRAM
          PROVIDE
          PUBLIC
          PUT
          RAISE
          RAISERROR
          RAISING
          RANGES
          READ
          READ …
          READTEXT
          REFERENCES
          REFRESH
          REJECT
          REPLACE
          REPORT
          RESERVE
          RESET
          RESTORE
          RESTRICT
          RETURN
          RIGHT
          ROLLBACK
          ROLLBACK WORK
          ROWCOUNT
          RULE
          SAVE
          SCAN
          SCREEN
          SCROOL
          SEARCH
          SELECT
          SELECTION-SCREEN
          SELECT-OPTIONS
          SELECT-OPTIONS 
          SELECT-SCREEN
          SET
          SET CURSOR
          SET PARAMETER
          SETUSER
          SHIFT
          SIGN
          SIN
          SINH
          SKIP
          SOME
          SORT
          SPLIT
          SQRT
          START-OF-SELECTION
          STATICS
          STOP
          STRLEN
          STRUCTURE
          SUBMIT
          SUBSTRACT
          SUBSTRACT-CORRESPONDING
          SUBTRACT
          SUBTRACT-CORRESPONDING
          SUM
          SUMMING
          SUPPRESS
          SYMBOL
          SYNTAX-CHECK
          SYNTAX-TRACT
          TABLE
          TABLE 
          TABLES
          TAN
          TANH
          TEXTPOOL
          THEN
          TIME
          TITLEBAR
          TO
          TOP
          TOP-OF-PAGE
          TOP-OF-PAGE DURING LINE-SELECTION
          TRAN
          TRANSACTION
          TRANSFER
          TRANSLATE
          TRIGGER
          TRUNC
          TRUNCATE
          TYPE-POOL
          TYPE-POOLS
          TYPES
          ULINE
          UNION
          UNIQUE
          UNPACK
          UPDATE
          USE
          USER
          USING
          VALUES
          VARYING
          VIEW
          WAITFOR
          WHEN
          WHERE
          WHILE
          WINDOW
          WITH
          WORK
          WRITE
        </Patterns>
			</PatternGroup>
      <PatternGroup Name="SqlKeywords" Style ="ABAP SQL Keyword" CaseSensitive="false">
        <Patterns>
          action add all alter and any as asc authorization avg backup begin between 
          break browse bulk by cascade case check checkpoint close clustered coalesce 
          collate column commit committed compute confirm constraint contains containstable 
          continue controlrow convert count  create cross current current_date current_time 
          current_timestamp current_user cursor database dbcc deallocate declare default 
          delete deny desc disable disk distinct distributed double drop dummy dump 
          else enable end errlvl errorexit escape except exec execute exists exit 
          fetch file fillfactor floppy for foreign forward_only freetext freetexttable 
          from full function goto grant group having holdlock identity identity_insert 
          identitycol if in index inner insert intersect into is isolation join key kill 
          left level like lineno load mirrorexit move national no nocheck nonclustered not 
          nounload null nullif of off offsets on once only open opendatasource openquery 
          openrowset option or order outer over percent perm permanent pipe plan precision 
          prepare primary print privileges proc procedure processexit public raiserror read 
          readtext read_only reconfigure recovery references repeatable replication restore 
          restrict return returns revoke right rollback rowcount rowguidcol rule save schema 
          select serializable session_user set setuser shutdown some statistics stats system_user 
          table tape temp temporary textsize then to top tran transaction trigger truncate tsequal 
          uncommitted union unique update updatetext use user values varying view waitfor when where 
          while with work writetext nocount count
        </Patterns>
      </PatternGroup>
			<PatternGroup Name="Numbers" Style="ABAP Number">
				<Pattern Text="(0x[0-9a-fA-F]+)" IsComplex="true" />
				<Pattern Text="([0-9]+)" IsComplex="true" />
			</PatternGroup>
				
			<!-- Datatypes for c# -->
			<PatternGroup Name="DataTypes" Style="ABAP Datatype" CaseSensitive="false">
				<Patterns>
	data type types end of long sbyte short uint ulong void double decimal bool char ushort
				</Patterns>
			</PatternGroup>
		</Keywords>
		<!-- Operators that can exist inside this block -->
		<Operators>
			<PatternGroup name="Operators" Style="ABAP Operator">
				<!--<Pattern Text="." />-->
				<Pattern Text="!" />
				<Pattern Text=":" />
				<Pattern Text="^" />
				<!--<Pattern Text="*" />-->
				<!--<Pattern Text="/" />-->
				<Pattern Text="+" />
				<Pattern Text="-" />
				<Pattern Text="=" />
				<Pattern Text="|" />
				<Pattern Text="&gt;" />
				<Pattern Text="&lt;" />
			</PatternGroup>
		</Operators>
		<!-- Blocks that can exist inside this block -->
		<ChildBlocks>
			<Child Name="ABAP XML Comment" />
			<Child Name="ABAP Multiline Comment" />
			<Child Name="ABAP Singleline Comment" />
			<Child Name="ABAP String" />
			<Child Name="ABAP Char" />
			<Child Name="ABAP Literal String" />
			<Child Name="ABAP Literal Char" />
			<Child Name="ABAP Code" />
		</ChildBlocks>
	</Block>
	<Block Name="ABAP XML Comment" Style="ABAP Comment" EscapeChar="" IsMultiline="false">
		<Scope Start="///" End="" Style="ABAP XML Comment" />
		<!-- this block can contain xml tags -->
		<ChildBlocks>
			<Child Name="ABAP XML Comment Tag" />
		</ChildBlocks>
	</Block>
	<!-- this block is the xml tags in xml comments-->
	<Block Name="ABAP XML Comment Tag" Style="ABAP XML Tag Text" EscapeChar="" IsMultiline="false">
		<Scope Start="&lt;" End="&gt;" Style="ABAP XML Tag" />
		<Operators>
			<PatternGroup name="ABAP XML Attrib" Style="ABAP XML Attrib">
				<!-- operator is the attributes that can exist within xml tags-->
				<Pattern Text="( [a-z,A-Z,:]+)" IsComplex="true" />
			</PatternGroup>
		</Operators>
		<ChildBlocks>
			<Child Name="XML String" />
		</ChildBlocks>
	</Block>
	<Block Name="XML String" Style="ABAP XML String" EscapeChar="" IsMultiline="false">
		<Scope Start="&quot;" End="&quot;" Style="ABAP XML String" />
	</Block>
	<Block Name="ABAP Singleline Comment" Style="ABAP Comment" EscapeChar="" IsMultiline="false">
		<Scope Start="*" End="" EscapeChar="\" Style="ABAP Comment" />
    <Scope Start="&quot;" End="" EscapeChar="\" Style="ABAP Comment" />
	</Block>
	<Block Name="ABAP String" Style="ABAP String" EscapeChar="\" IsMultiline="false">
		<Scope Start="&quot;" End="&quot;" EscapeChar="\" Style="ABAP String" />
		<Operators>
			<PatternGroup name="URL" Style="ABAP URL">
				<Pattern Text="http://([\w-]+\.)+[\w-]+(/[\w- ./?%&amp;=]*)?" IsComplex="true" />
			</PatternGroup>
		</Operators>
	</Block>

	<Block Name="ABAP Char" Style="ABAP String" EscapeChar="" IsMultiline="false">
		<Scope Start="'" End="'"  EscapeChar="\" Style="ABAP String" />
	</Block>

	<Block Name="ABAP Literal String" Style="ABAP String" EscapeChar="" IsMultiline="true" >
		<Scope Start="@&quot;" End="&quot;" Style="ABAP String" Text="@'...'" />
	</Block>

	<Block Name="ABAP Literal Char" Style="ABAP String" EscapeChar="" IsMultiline="false">
		<Scope Start="@'" End="'" Style="ABAP String" />
	</Block>
	<Style Name="ABAP Code" ForeColor="" BackColor="" Bold="false" Italic="false" Underline="false" />
	<Style Name="ABAP Scope" ForeColor="" BackColor="" Bold="false" Italic="false" Underline="false" />
	<Style Name="ABAP Region" ForeColor="blue" BackColor="" Bold="true" Italic="false" Underline="false" />
	<Style Name="ABAP XML Comment" ForeColor="gray" BackColor="" Bold="false" Italic="false" Underline="false" />
	<Style Name="ABAP XML Tag" ForeColor="gray" BackColor="" Bold="false" Italic="false" Underline="false" />
	<Style Name="ABAP XML Tag Text" ForeColor="gray" BackColor="" Bold="false" Italic="false" Underline="false" />
	<Style Name="ABAP XML Attrib" ForeColor="gray" BackColor="" Bold="false" Italic="false" Underline="false" />
	<Style Name="ABAP XML String" ForeColor="gray" BackColor="lightyellow" Bold="false" Italic="false" Underline="false" />
	<Style Name="ABAP Comment" ForeColor="gray" BackColor="" Bold="false" Italic="true" Underline="false" />
	<Style Name="ABAP String" ForeColor="SteelBlue" BackColor="" Bold="false" Italic="false" Underline="false" />
	<Style Name="ABAP Number" ForeColor="Teal" BackColor="" Bold="true" Italic="false" Underline="false" />
	<Style Name="ABAP Operator" ForeColor="Red" BackColor="" Bold="false" Italic="false" Underline="false" />
	<Style Name="ABAP Keyword" ForeColor="Blue" BackColor="" Bold="true" Italic="false" Underline="false" />
	<Style Name="ABAP Datatype" ForeColor="DarkBlue" BackColor="" Bold="true" Italic="false" Underline="false" />
	<Style Name="ABAP URL" ForeColor="Blue" BackColor="" Bold="false" Italic="false" Underline="true" />
  <Style Name="ABAP SQL Keyword" ForeColor="Blue" BackColor="" Bold="true" Italic="false" Underline="false" />
</Language>